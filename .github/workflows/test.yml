name: Test

on:
  push:
    branches:
      - test
      - test/*

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      RDB_URL: ${{ secrets.RDB_URL }}

    steps:
      - name: Test
        run: |
          MIGRATION_COMMAND=${GITHUB_REF#refs/heads/test/}
          echo "MIGRATION_COMMAND=${MIGRATION_COMMAND}" >> $GITHUB_ENV
          REPO_NAME="${GITHUB_REPOSITORY##*/}"
          echo "REPO_NAME=${REPO_NAME}" >> $GITHUB_ENV
          echo $MIGRATION_COMMAND
          echo $REPO_NAME
          if [[ "$MIGRATION_COMMAND" == "test-command" ]]; then
            echo "test-command is executed"
          fi
          BRANCH_NAME=${GITHUB_REF#refs/heads/}
          echo "BRANCH_NAME=${BRANCH_NAME}" >> $GITHUB_ENV

      # 1. Connect to bastion server
      # 2. Install git
      # 3. Clone repository
      # 4. Checkout branch
      - name: Connect to bastion server
        uses: appleboy/ssh-action@master
        env:
          REPO_NAME: ${{ env.REPO_NAME }}
          BRANCH_NAME: ${{ env.BRANCH_NAME }}
          MIGRATION_COMMAND: ${{ env.MIGRATION_COMMAND }}
        with:
          key: ${{ secrets.BASTION_KEY }}
          host: ${{ secrets.BASTION_HOST }}
          username: ${{ secrets.BASTION_USER_NAME }}
          port: ${{ secrets.BASTION_PORT }}
          script: |
            echo BRANCH_NAME=$BRANCH_NAME
            # echo "1. Connected to bastion server"
            # echo "2. Install git"
            # sudo dnf install git -y
            # echo "3. Clone repository"
            # cd ~
            # if ls | grep -q "$REPO_NAME"; then
            #   echo "Directory already exists"
            # else
            #   git clone ${{ secrets.GIT_REPOSITORY_URL }}
            # fi
            # echo "4. Checkout branch"
            # cd ${{ secrets.GIT_REPOSITORY_NAME }}
            # git fetch
            # branch_name=${GITHUB_REF#refs/heads/}
            # git checkout $branch_name || git checkout -b $branch_name origin/$branch_name
            # echo "Checked out to $branch_name"
